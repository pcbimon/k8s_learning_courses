networks:
  app_networks:
    name: app_networks
    driver: bridge
services:
  # Postgres service
  postgres:
    image: postgres:latest
    container_name: postgres_db
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: storedb
    ports:
      - "6432:5432"
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data
      - ./sql/init_postgres.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app_networks
    restart: always
  # MySQL Service
  mysql:
    image: mysql:latest
    container_name: mysql_db
    environment:
      - MYSQL_ROOT_PASSWORD=123456
      - MYSQL_DATABASE=storedb
      - MYSQL_USER=myuser
      - MYSQL_PASSWORD=123456
    volumes:
      - ./volumes/mysql:/var/lib/mysql/ # สร้าง Volume สำหรับเก็บข้อมูล
      - ./sql/init_mysql.sql:/docker-entrypoint-initdb.d/ # init script สำหรับสร้าง Table
    ports:
      - "5506:3306"
    networks:
      - app_networks
    restart: always
  # Sqlite Service
  sqlite:
    image: nouchka/sqlite3
    container_name: sqlite_db
    environment:
      - DB_PATH=/data/sqlite/storedb.db
    volumes:
      - ./volumes/sqlite:/data/sqlite
    # command: tail -f /dev/null # Keep container running
    networks:
      - app_networks
    restart: always
  # SQL Server Service (Azure SQL Edge)
  mssql:
    image: mcr.microsoft.com/azure-sql-edge:latest
    container_name: mssql_db
    environment:
      ACCEPT_EULA: Y
      MSSQL_SA_PASSWORD: "MyPassword@123"
      MSSQL_DATABASE: storedb
    ports:
      - "1533:1433"
    volumes:
      - ./volumes/mssql:/var/opt/mssql  # Mount volume สำหรับ SQL Server
      - ./sql/init_sqlserver.sql:/var/opt/mssql/init.sql
    networks:
      - app_networks
    restart: always
  # MongoDB Service
  mongo:
    image: mongo:latest
    container_name: mongo_db
    environment:
      MONGO_INITDB_ROOT_USERNAME: myuser
      MONGO_INITDB_ROOT_PASSWORD: 123456
      MONGO_INITDB_DATABASE: storedb
    ports:
      - "37017:27017"
    volumes:
      - ./volumes/mongodb:/data/db  # Mount volume สำหรับ MongoDB
      - ./sql/init_mongodb.json:/docker-entrypoint-initdb.d/init.json
    networks:
      - app_networks
    restart: always